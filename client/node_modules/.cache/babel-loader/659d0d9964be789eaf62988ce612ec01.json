{"ast":null,"code":"'use strict';\n\nclass RecrawlWarning {\n  constructor(root, count) {\n    this.root = root;\n    this.count = count;\n  }\n\n  static findByRoot(root) {\n    for (let i = 0; i < this.RECRAWL_WARNINGS.length; i++) {\n      let warning = this.RECRAWL_WARNINGS[i];\n\n      if (warning.root === root) {\n        return warning;\n      }\n    }\n  }\n\n  static isRecrawlWarningDupe(warningMessage) {\n    if (typeof warningMessage !== 'string') {\n      return false;\n    }\n\n    let match = warningMessage.match(this.REGEXP);\n\n    if (!match) {\n      return false;\n    }\n\n    let count = Number(match[1]);\n    let root = match[2];\n    let warning = this.findByRoot(root);\n\n    if (warning) {\n      // only keep the highest count, assume count to either stay the same or\n      // increase.\n      if (warning.count >= count) {\n        return true;\n      } else {\n        // update the existing warning to the latest (highest) count\n        warning.count = count;\n        return false;\n      }\n    } else {\n      this.RECRAWL_WARNINGS.push(new RecrawlWarning(root, count));\n      return false;\n    }\n  }\n\n}\n\nRecrawlWarning.RECRAWL_WARNINGS = [];\nRecrawlWarning.REGEXP = /Recrawled this watch (\\d+) times, most recently because:\\n([^:]+)/;\nmodule.exports = RecrawlWarning;","map":{"version":3,"sources":["/home/epitech/Documents/e-commerce/client/node_modules/sane/src/utils/recrawl-warning-dedupe.js"],"names":["RecrawlWarning","constructor","root","count","findByRoot","i","RECRAWL_WARNINGS","length","warning","isRecrawlWarningDupe","warningMessage","match","REGEXP","Number","push","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEgB,SAAVC,UAAU,CAACF,IAAD,EAAO;AACtB,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,gBAAL,CAAsBC,MAA1C,EAAkDF,CAAC,EAAnD,EAAuD;AACrD,UAAIG,OAAO,GAAG,KAAKF,gBAAL,CAAsBD,CAAtB,CAAd;;AACA,UAAIG,OAAO,CAACN,IAAR,KAAiBA,IAArB,EAA2B;AACzB,eAAOM,OAAP;AACD;AACF;AACF;;AAE0B,SAApBC,oBAAoB,CAACC,cAAD,EAAiB;AAC1C,QAAI,OAAOA,cAAP,KAA0B,QAA9B,EAAwC;AACtC,aAAO,KAAP;AACD;;AACD,QAAIC,KAAK,GAAGD,cAAc,CAACC,KAAf,CAAqB,KAAKC,MAA1B,CAAZ;;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AACD,QAAIR,KAAK,GAAGU,MAAM,CAACF,KAAK,CAAC,CAAD,CAAN,CAAlB;AACA,QAAIT,IAAI,GAAGS,KAAK,CAAC,CAAD,CAAhB;AAEA,QAAIH,OAAO,GAAG,KAAKJ,UAAL,CAAgBF,IAAhB,CAAd;;AAEA,QAAIM,OAAJ,EAAa;AACX;AACA;AACA,UAAIA,OAAO,CAACL,KAAR,IAAiBA,KAArB,EAA4B;AAC1B,eAAO,IAAP;AACD,OAFD,MAEO;AACL;AACAK,QAAAA,OAAO,CAACL,KAAR,GAAgBA,KAAhB;AACA,eAAO,KAAP;AACD;AACF,KAVD,MAUO;AACL,WAAKG,gBAAL,CAAsBQ,IAAtB,CAA2B,IAAId,cAAJ,CAAmBE,IAAnB,EAAyBC,KAAzB,CAA3B;AACA,aAAO,KAAP;AACD;AACF;;AA1CkB;;AA6CrBH,cAAc,CAACM,gBAAf,GAAkC,EAAlC;AACAN,cAAc,CAACY,MAAf,GAAwB,mEAAxB;AAEAG,MAAM,CAACC,OAAP,GAAiBhB,cAAjB","sourcesContent":["'use strict';\n\nclass RecrawlWarning {\n  constructor(root, count) {\n    this.root = root;\n    this.count = count;\n  }\n\n  static findByRoot(root) {\n    for (let i = 0; i < this.RECRAWL_WARNINGS.length; i++) {\n      let warning = this.RECRAWL_WARNINGS[i];\n      if (warning.root === root) {\n        return warning;\n      }\n    }\n  }\n\n  static isRecrawlWarningDupe(warningMessage) {\n    if (typeof warningMessage !== 'string') {\n      return false;\n    }\n    let match = warningMessage.match(this.REGEXP);\n    if (!match) {\n      return false;\n    }\n    let count = Number(match[1]);\n    let root = match[2];\n\n    let warning = this.findByRoot(root);\n\n    if (warning) {\n      // only keep the highest count, assume count to either stay the same or\n      // increase.\n      if (warning.count >= count) {\n        return true;\n      } else {\n        // update the existing warning to the latest (highest) count\n        warning.count = count;\n        return false;\n      }\n    } else {\n      this.RECRAWL_WARNINGS.push(new RecrawlWarning(root, count));\n      return false;\n    }\n  }\n}\n\nRecrawlWarning.RECRAWL_WARNINGS = [];\nRecrawlWarning.REGEXP = /Recrawled this watch (\\d+) times, most recently because:\\n([^:]+)/;\n\nmodule.exports = RecrawlWarning;\n"]},"metadata":{},"sourceType":"script"}