{"ast":null,"code":"var tmpl = require('tmpl');\n\nmodule.exports = makeError;\n\nfunction BaseError() {}\n\nBaseError.prototype = new Error();\n\nBaseError.prototype.toString = function () {\n  return this.message;\n};\n/**\n * Makes an Error function with the signature:\n *\n *   function(message, data)\n *\n * You'll typically do something like:\n *\n *   var UnknownFileTypeError = makeError(\n *     'UnknownFileTypeError',\n *     'The specified type is not known.'\n *   )\n *   var er = UnknownFileTypeError()\n *\n * `er` will have a prototype chain that ensures:\n *\n *   er instanceof Error\n *   er instanceof UnknownFileTypeError\n *\n * You can also do `var er = new UnknownFileTypeError()` if you really like the\n * `new` keyword.\n *\n * @param String  The name of the error.\n * @param String  The default message string.\n * @param Object  The default data object, merged with per instance data.\n */\n\n\nfunction makeError(name, defaultMessage, defaultData) {\n  defaultMessage = tmpl(defaultMessage || '');\n  defaultData = defaultData || {};\n  if (defaultData.proto && !(defaultData.proto instanceof BaseError)) throw new Error('The custom \"proto\" must be an Error created via makeError');\n\n  var CustomError = function (message, data) {\n    if (!(this instanceof CustomError)) return new CustomError(message, data);\n\n    if (typeof message !== 'string' && !data) {\n      data = message;\n      message = null;\n    }\n\n    this.name = name;\n    this.data = data || defaultData;\n\n    if (typeof message === 'string') {\n      this.message = tmpl(message, this.data);\n    } else {\n      this.message = defaultMessage(this.data);\n    }\n\n    var er = new Error();\n    this.stack = er.stack;\n\n    if (this.stack) {\n      // remove TWO stack level:\n      if (typeof Components !== 'undefined') {\n        // Mozilla:\n        this.stack = this.stack.substring(this.stack.indexOf('\\n') + 2);\n      } else if (typeof chrome !== 'undefined' || typeof process !== 'undefined') {\n        // Google Chrome/Node.js:\n        this.stack = this.stack.replace(/\\n[^\\n]*/, '');\n        this.stack = this.stack.replace(/\\n[^\\n]*/, '');\n        this.stack = this.name + (this.message ? ': ' + this.message : '') + this.stack.substring(5);\n      }\n    }\n\n    if ('fileName' in er) this.fileName = er.fileName;\n    if ('lineNumber' in er) this.lineNumber = er.lineNumber;\n  };\n\n  CustomError.prototype = defaultData.proto || new BaseError();\n  delete defaultData.proto;\n  return CustomError;\n}","map":{"version":3,"sources":["/home/epitech/Documents/e-commerce/client/node_modules/makeerror/lib/makeerror.js"],"names":["tmpl","require","module","exports","makeError","BaseError","prototype","Error","toString","message","name","defaultMessage","defaultData","proto","CustomError","data","er","stack","Components","substring","indexOf","chrome","process","replace","fileName","lineNumber"],"mappings":"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","sourcesContent":["var tmpl = require('tmpl')\n\nmodule.exports = makeError\n\nfunction BaseError() {}\nBaseError.prototype = new Error()\nBaseError.prototype.toString = function() {\n  return this.message\n}\n\n\n/**\n * Makes an Error function with the signature:\n *\n *   function(message, data)\n *\n * You'll typically do something like:\n *\n *   var UnknownFileTypeError = makeError(\n *     'UnknownFileTypeError',\n *     'The specified type is not known.'\n *   )\n *   var er = UnknownFileTypeError()\n *\n * `er` will have a prototype chain that ensures:\n *\n *   er instanceof Error\n *   er instanceof UnknownFileTypeError\n *\n * You can also do `var er = new UnknownFileTypeError()` if you really like the\n * `new` keyword.\n *\n * @param String  The name of the error.\n * @param String  The default message string.\n * @param Object  The default data object, merged with per instance data.\n */\nfunction makeError(name, defaultMessage, defaultData) {\n  defaultMessage = tmpl(defaultMessage || '')\n  defaultData = defaultData || {}\n  if (defaultData.proto && !(defaultData.proto instanceof BaseError))\n    throw new Error('The custom \"proto\" must be an Error created via makeError')\n\n  var CustomError = function(message, data) {\n    if (!(this instanceof CustomError)) return new CustomError(message, data)\n\n    if (typeof message !== 'string' && !data) {\n      data = message\n      message = null\n    }\n\n    this.name = name\n    this.data = data || defaultData\n\n    if (typeof message === 'string') {\n      this.message = tmpl(message, this.data)\n    } else {\n      this.message = defaultMessage(this.data)\n    }\n\n    var er = new Error()\n    this.stack = er.stack\n    if (this.stack) {\n      // remove TWO stack level:\n      if (typeof Components !== 'undefined') {\n        // Mozilla:\n        this.stack = this.stack.substring(this.stack.indexOf('\\n') + 2)\n      } else if (typeof chrome !== 'undefined' || typeof process !== 'undefined') {\n        // Google Chrome/Node.js:\n        this.stack = this.stack.replace(/\\n[^\\n]*/, '')\n        this.stack = this.stack.replace(/\\n[^\\n]*/, '')\n        this.stack = (\n          this.name +\n          (this.message ? (': ' + this.message) : '') +\n          this.stack.substring(5)\n        )\n      }\n    }\n\n    if ('fileName' in er) this.fileName = er.fileName\n    if ('lineNumber' in er) this.lineNumber = er.lineNumber\n  }\n\n  CustomError.prototype = defaultData.proto || new BaseError()\n  delete defaultData.proto\n\n  return CustomError\n}\n"]},"metadata":{},"sourceType":"script"}