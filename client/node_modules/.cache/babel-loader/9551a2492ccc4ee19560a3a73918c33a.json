{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _types() {\n  const data = require('../types');\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst isWorkerThread = () => {\n  try {\n    // `Require` here to support Node v10\n    const {\n      isMainThread,\n      parentPort\n    } = require('worker_threads');\n\n    return !isMainThread && parentPort;\n  } catch {\n    return false;\n  }\n};\n\nconst messageParent = (message, parentProcess = process) => {\n  try {\n    if (isWorkerThread()) {\n      // `Require` here to support Node v10\n      const {\n        parentPort\n      } = require('worker_threads');\n\n      parentPort.postMessage([_types().PARENT_MESSAGE_CUSTOM, message]);\n    } else if (typeof parentProcess.send === 'function') {\n      parentProcess.send([_types().PARENT_MESSAGE_CUSTOM, message]);\n    }\n  } catch {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n};\n\nvar _default = messageParent;\nexports.default = _default;","map":{"version":3,"sources":["/home/epitech/Documents/e-commerce/client/node_modules/jest-worker/build/workers/messageParent.js"],"names":["Object","defineProperty","exports","value","default","_types","data","require","isWorkerThread","isMainThread","parentPort","messageParent","message","parentProcess","process","postMessage","PARENT_MESSAGE_CUSTOM","send","Error","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,IAAI,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEAF,EAAAA,MAAM,GAAG,YAAY;AACnB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,cAAc,GAAG,MAAM;AAC3B,MAAI;AACF;AACA,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA;AAAf,QAA6BH,OAAO,CAAC,gBAAD,CAA1C;;AAEA,WAAO,CAACE,YAAD,IAAiBC,UAAxB;AACD,GALD,CAKE,MAAM;AACN,WAAO,KAAP;AACD;AACF,CATD;;AAWA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,aAAa,GAAGC,OAA1B,KAAsC;AAC1D,MAAI;AACF,QAAIN,cAAc,EAAlB,EAAsB;AACpB;AACA,YAAM;AAACE,QAAAA;AAAD,UAAeH,OAAO,CAAC,gBAAD,CAA5B;;AAEAG,MAAAA,UAAU,CAACK,WAAX,CAAuB,CAACV,MAAM,GAAGW,qBAAV,EAAiCJ,OAAjC,CAAvB;AACD,KALD,MAKO,IAAI,OAAOC,aAAa,CAACI,IAArB,KAA8B,UAAlC,EAA8C;AACnDJ,MAAAA,aAAa,CAACI,IAAd,CAAmB,CAACZ,MAAM,GAAGW,qBAAV,EAAiCJ,OAAjC,CAAnB;AACD;AACF,GATD,CASE,MAAM;AACN,UAAM,IAAIM,KAAJ,CAAU,kDAAV,CAAN;AACD;AACF,CAbD;;AAeA,IAAIC,QAAQ,GAAGR,aAAf;AACAT,OAAO,CAACE,OAAR,GAAkBe,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _types() {\n  const data = require('../types');\n\n  _types = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst isWorkerThread = () => {\n  try {\n    // `Require` here to support Node v10\n    const {isMainThread, parentPort} = require('worker_threads');\n\n    return !isMainThread && parentPort;\n  } catch {\n    return false;\n  }\n};\n\nconst messageParent = (message, parentProcess = process) => {\n  try {\n    if (isWorkerThread()) {\n      // `Require` here to support Node v10\n      const {parentPort} = require('worker_threads');\n\n      parentPort.postMessage([_types().PARENT_MESSAGE_CUSTOM, message]);\n    } else if (typeof parentProcess.send === 'function') {\n      parentProcess.send([_types().PARENT_MESSAGE_CUSTOM, message]);\n    }\n  } catch {\n    throw new Error('\"messageParent\" can only be used inside a worker');\n  }\n};\n\nvar _default = messageParent;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}