{"ast":null,"code":"'use strict';\n\nfunction _child_process() {\n  const data = require('child_process');\n\n  _child_process = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _constants() {\n  const data = _interopRequireDefault(require('../constants'));\n\n  _constants = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fastPath() {\n  const data = _interopRequireWildcard(require('../lib/fast_path'));\n\n  fastPath = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nasync function hasNativeFindSupport(forceNodeFilesystemAPI) {\n  if (forceNodeFilesystemAPI) {\n    return false;\n  }\n\n  try {\n    return await new Promise(resolve => {\n      // Check the find binary supports the non-POSIX -iname parameter wrapped in parens.\n      const args = ['.', '-type', 'f', '(', '-iname', '*.ts', '-o', '-iname', '*.js', ')'];\n      const child = (0, _child_process().spawn)('find', args, {\n        cwd: __dirname\n      });\n      child.on('error', () => {\n        resolve(false);\n      });\n      child.on('exit', code => {\n        resolve(code === 0);\n      });\n    });\n  } catch {\n    return false;\n  }\n}\n\nfunction find(roots, extensions, ignore, callback) {\n  const result = [];\n  let activeCalls = 0;\n\n  function search(directory) {\n    activeCalls++;\n    fs().readdir(directory, {\n      withFileTypes: true\n    }, (err, entries) => {\n      activeCalls--;\n\n      if (err) {\n        callback(result);\n        return;\n      } // node < v10.10 does not support the withFileTypes option, and\n      // entry will be a string.\n\n\n      entries.forEach(entry => {\n        const file = path().join(directory, typeof entry === 'string' ? entry : entry.name);\n\n        if (ignore(file)) {\n          return;\n        }\n\n        if (typeof entry !== 'string') {\n          if (entry.isSymbolicLink()) {\n            return;\n          }\n\n          if (entry.isDirectory()) {\n            search(file);\n            return;\n          }\n        }\n\n        activeCalls++;\n        fs().lstat(file, (err, stat) => {\n          activeCalls--; // This logic is unnecessary for node > v10.10, but leaving it in\n          // since we need it for backwards-compatibility still.\n\n          if (!err && stat && !stat.isSymbolicLink()) {\n            if (stat.isDirectory()) {\n              search(file);\n            } else {\n              const ext = path().extname(file).substr(1);\n\n              if (extensions.indexOf(ext) !== -1) {\n                result.push([file, stat.mtime.getTime(), stat.size]);\n              }\n            }\n          }\n\n          if (activeCalls === 0) {\n            callback(result);\n          }\n        });\n      });\n\n      if (activeCalls === 0) {\n        callback(result);\n      }\n    });\n  }\n\n  if (roots.length > 0) {\n    roots.forEach(search);\n  } else {\n    callback(result);\n  }\n}\n\nfunction findNative(roots, extensions, ignore, callback) {\n  const args = Array.from(roots);\n  args.push('-type', 'f');\n\n  if (extensions.length) {\n    args.push('(');\n  }\n\n  extensions.forEach((ext, index) => {\n    if (index) {\n      args.push('-o');\n    }\n\n    args.push('-iname');\n    args.push('*.' + ext);\n  });\n\n  if (extensions.length) {\n    args.push(')');\n  }\n\n  const child = (0, _child_process().spawn)('find', args);\n  let stdout = '';\n\n  if (child.stdout === null) {\n    throw new Error('stdout is null - this should never happen. Please open up an issue at https://github.com/facebook/jest');\n  }\n\n  child.stdout.setEncoding('utf-8');\n  child.stdout.on('data', data => stdout += data);\n  child.stdout.on('close', () => {\n    const lines = stdout.trim().split('\\n').filter(x => !ignore(x));\n    const result = [];\n    let count = lines.length;\n\n    if (!count) {\n      callback([]);\n    } else {\n      lines.forEach(path => {\n        fs().stat(path, (err, stat) => {\n          if (!err && stat) {\n            result.push([path, stat.mtime.getTime(), stat.size]);\n          }\n\n          if (--count === 0) {\n            callback(result);\n          }\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = async function nodeCrawl(options) {\n  const {\n    data,\n    extensions,\n    forceNodeFilesystemAPI,\n    ignore,\n    rootDir,\n    roots\n  } = options;\n  const useNativeFind = await hasNativeFindSupport(forceNodeFilesystemAPI);\n  return new Promise(resolve => {\n    const callback = list => {\n      const files = new Map();\n      const removedFiles = new Map(data.files);\n      list.forEach(fileData => {\n        const [filePath, mtime, size] = fileData;\n        const relativeFilePath = fastPath().relative(rootDir, filePath);\n        const existingFile = data.files.get(relativeFilePath);\n\n        if (existingFile && existingFile[_constants().default.MTIME] === mtime) {\n          files.set(relativeFilePath, existingFile);\n        } else {\n          // See ../constants.js; SHA-1 will always be null and fulfilled later.\n          files.set(relativeFilePath, ['', mtime, size, 0, '', null]);\n        }\n\n        removedFiles.delete(relativeFilePath);\n      });\n      data.files = files;\n      resolve({\n        hasteMap: data,\n        removedFiles\n      });\n    };\n\n    if (useNativeFind) {\n      findNative(roots, extensions, ignore, callback);\n    } else {\n      find(roots, extensions, ignore, callback);\n    }\n  });\n};","map":{"version":3,"sources":["/home/epitech/Documents/e-commerce/client/node_modules/jest-haste-map/build/crawlers/node.js"],"names":["_child_process","data","require","path","_interopRequireWildcard","fs","_constants","_interopRequireDefault","fastPath","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","hasNativeFindSupport","forceNodeFilesystemAPI","Promise","resolve","args","child","spawn","cwd","__dirname","on","code","find","roots","extensions","ignore","callback","result","activeCalls","search","directory","readdir","withFileTypes","err","entries","forEach","entry","file","join","name","isSymbolicLink","isDirectory","lstat","stat","ext","extname","substr","indexOf","push","mtime","getTime","size","length","findNative","Array","from","index","stdout","Error","setEncoding","lines","trim","split","filter","x","count","module","exports","nodeCrawl","options","rootDir","useNativeFind","list","files","Map","removedFiles","fileData","filePath","relativeFilePath","relative","existingFile","MTIME","delete","hasteMap"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _child_process() {\n  const data = require('child_process');\n\n  _child_process = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _constants() {\n  const data = _interopRequireDefault(require('../constants'));\n\n  _constants = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fastPath() {\n  const data = _interopRequireWildcard(require('../lib/fast_path'));\n\n  fastPath = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nasync function hasNativeFindSupport(forceNodeFilesystemAPI) {\n  if (forceNodeFilesystemAPI) {\n    return false;\n  }\n\n  try {\n    return await new Promise(resolve => {\n      // Check the find binary supports the non-POSIX -iname parameter wrapped in parens.\n      const args = [\n        '.',\n        '-type',\n        'f',\n        '(',\n        '-iname',\n        '*.ts',\n        '-o',\n        '-iname',\n        '*.js',\n        ')'\n      ];\n      const child = (0, _child_process().spawn)('find', args, {\n        cwd: __dirname\n      });\n      child.on('error', () => {\n        resolve(false);\n      });\n      child.on('exit', code => {\n        resolve(code === 0);\n      });\n    });\n  } catch {\n    return false;\n  }\n}\n\nfunction find(roots, extensions, ignore, callback) {\n  const result = [];\n  let activeCalls = 0;\n\n  function search(directory) {\n    activeCalls++;\n    fs().readdir(\n      directory,\n      {\n        withFileTypes: true\n      },\n      (err, entries) => {\n        activeCalls--;\n\n        if (err) {\n          callback(result);\n          return;\n        } // node < v10.10 does not support the withFileTypes option, and\n        // entry will be a string.\n\n        entries.forEach(entry => {\n          const file = path().join(\n            directory,\n            typeof entry === 'string' ? entry : entry.name\n          );\n\n          if (ignore(file)) {\n            return;\n          }\n\n          if (typeof entry !== 'string') {\n            if (entry.isSymbolicLink()) {\n              return;\n            }\n\n            if (entry.isDirectory()) {\n              search(file);\n              return;\n            }\n          }\n\n          activeCalls++;\n          fs().lstat(file, (err, stat) => {\n            activeCalls--; // This logic is unnecessary for node > v10.10, but leaving it in\n            // since we need it for backwards-compatibility still.\n\n            if (!err && stat && !stat.isSymbolicLink()) {\n              if (stat.isDirectory()) {\n                search(file);\n              } else {\n                const ext = path().extname(file).substr(1);\n\n                if (extensions.indexOf(ext) !== -1) {\n                  result.push([file, stat.mtime.getTime(), stat.size]);\n                }\n              }\n            }\n\n            if (activeCalls === 0) {\n              callback(result);\n            }\n          });\n        });\n\n        if (activeCalls === 0) {\n          callback(result);\n        }\n      }\n    );\n  }\n\n  if (roots.length > 0) {\n    roots.forEach(search);\n  } else {\n    callback(result);\n  }\n}\n\nfunction findNative(roots, extensions, ignore, callback) {\n  const args = Array.from(roots);\n  args.push('-type', 'f');\n\n  if (extensions.length) {\n    args.push('(');\n  }\n\n  extensions.forEach((ext, index) => {\n    if (index) {\n      args.push('-o');\n    }\n\n    args.push('-iname');\n    args.push('*.' + ext);\n  });\n\n  if (extensions.length) {\n    args.push(')');\n  }\n\n  const child = (0, _child_process().spawn)('find', args);\n  let stdout = '';\n\n  if (child.stdout === null) {\n    throw new Error(\n      'stdout is null - this should never happen. Please open up an issue at https://github.com/facebook/jest'\n    );\n  }\n\n  child.stdout.setEncoding('utf-8');\n  child.stdout.on('data', data => (stdout += data));\n  child.stdout.on('close', () => {\n    const lines = stdout\n      .trim()\n      .split('\\n')\n      .filter(x => !ignore(x));\n    const result = [];\n    let count = lines.length;\n\n    if (!count) {\n      callback([]);\n    } else {\n      lines.forEach(path => {\n        fs().stat(path, (err, stat) => {\n          if (!err && stat) {\n            result.push([path, stat.mtime.getTime(), stat.size]);\n          }\n\n          if (--count === 0) {\n            callback(result);\n          }\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = async function nodeCrawl(options) {\n  const {\n    data,\n    extensions,\n    forceNodeFilesystemAPI,\n    ignore,\n    rootDir,\n    roots\n  } = options;\n  const useNativeFind = await hasNativeFindSupport(forceNodeFilesystemAPI);\n  return new Promise(resolve => {\n    const callback = list => {\n      const files = new Map();\n      const removedFiles = new Map(data.files);\n      list.forEach(fileData => {\n        const [filePath, mtime, size] = fileData;\n        const relativeFilePath = fastPath().relative(rootDir, filePath);\n        const existingFile = data.files.get(relativeFilePath);\n\n        if (\n          existingFile &&\n          existingFile[_constants().default.MTIME] === mtime\n        ) {\n          files.set(relativeFilePath, existingFile);\n        } else {\n          // See ../constants.js; SHA-1 will always be null and fulfilled later.\n          files.set(relativeFilePath, ['', mtime, size, 0, '', null]);\n        }\n\n        removedFiles.delete(relativeFilePath);\n      });\n      data.files = files;\n      resolve({\n        hasteMap: data,\n        removedFiles\n      });\n    };\n\n    if (useNativeFind) {\n      findNative(roots, extensions, ignore, callback);\n    } else {\n      find(roots, extensions, ignore, callback);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}