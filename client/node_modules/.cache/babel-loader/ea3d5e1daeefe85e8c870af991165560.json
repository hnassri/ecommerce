{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = _interopRequireDefault(require('./constants'));\n\nvar fastPath = _interopRequireWildcard(require('./lib/fast_path'));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst EMPTY_OBJ = {};\nconst EMPTY_MAP = new Map();\n\nclass ModuleMap {\n  static mapToArrayRecursive(map) {\n    let arr = Array.from(map);\n\n    if (arr[0] && arr[0][1] instanceof Map) {\n      arr = arr.map(el => [el[0], this.mapToArrayRecursive(el[1])]);\n    }\n\n    return arr;\n  }\n\n  static mapFromArrayRecursive(arr) {\n    if (arr[0] && Array.isArray(arr[1])) {\n      arr = arr.map(el => [el[0], this.mapFromArrayRecursive(el[1])]);\n    }\n\n    return new Map(arr);\n  }\n\n  constructor(raw) {\n    _defineProperty(this, '_raw', void 0);\n\n    _defineProperty(this, 'json', void 0);\n\n    this._raw = raw;\n  }\n\n  getModule(name, platform, supportsNativePlatform, type) {\n    if (type == null) {\n      type = _constants.default.MODULE;\n    }\n\n    const module = this._getModuleMetadata(name, platform, !!supportsNativePlatform);\n\n    if (module && module[_constants.default.TYPE] === type) {\n      const modulePath = module[_constants.default.PATH];\n      return modulePath && fastPath.resolve(this._raw.rootDir, modulePath);\n    }\n\n    return null;\n  }\n\n  getPackage(name, platform, _supportsNativePlatform) {\n    return this.getModule(name, platform, null, _constants.default.PACKAGE);\n  }\n\n  getMockModule(name) {\n    const mockPath = this._raw.mocks.get(name) || this._raw.mocks.get(name + '/index');\n\n    return mockPath && fastPath.resolve(this._raw.rootDir, mockPath);\n  }\n\n  getRawModuleMap() {\n    return {\n      duplicates: this._raw.duplicates,\n      map: this._raw.map,\n      mocks: this._raw.mocks,\n      rootDir: this._raw.rootDir\n    };\n  }\n\n  toJSON() {\n    if (!this.json) {\n      this.json = {\n        duplicates: ModuleMap.mapToArrayRecursive(this._raw.duplicates),\n        map: Array.from(this._raw.map),\n        mocks: Array.from(this._raw.mocks),\n        rootDir: this._raw.rootDir\n      };\n    }\n\n    return this.json;\n  }\n\n  static fromJSON(serializableModuleMap) {\n    return new ModuleMap({\n      duplicates: ModuleMap.mapFromArrayRecursive(serializableModuleMap.duplicates),\n      map: new Map(serializableModuleMap.map),\n      mocks: new Map(serializableModuleMap.mocks),\n      rootDir: serializableModuleMap.rootDir\n    });\n  }\n  /**\n   * When looking up a module's data, we walk through each eligible platform for\n   * the query. For each platform, we want to check if there are known\n   * duplicates for that name+platform pair. The duplication logic normally\n   * removes elements from the `map` object, but we want to check upfront to be\n   * extra sure. If metadata exists both in the `duplicates` object and the\n   * `map`, this would be a bug.\n   */\n\n\n  _getModuleMetadata(name, platform, supportsNativePlatform) {\n    const map = this._raw.map.get(name) || EMPTY_OBJ;\n    const dupMap = this._raw.duplicates.get(name) || EMPTY_MAP;\n\n    if (platform != null) {\n      this._assertNoDuplicates(name, platform, supportsNativePlatform, dupMap.get(platform));\n\n      if (map[platform] != null) {\n        return map[platform];\n      }\n    }\n\n    if (supportsNativePlatform) {\n      this._assertNoDuplicates(name, _constants.default.NATIVE_PLATFORM, supportsNativePlatform, dupMap.get(_constants.default.NATIVE_PLATFORM));\n\n      if (map[_constants.default.NATIVE_PLATFORM]) {\n        return map[_constants.default.NATIVE_PLATFORM];\n      }\n    }\n\n    this._assertNoDuplicates(name, _constants.default.GENERIC_PLATFORM, supportsNativePlatform, dupMap.get(_constants.default.GENERIC_PLATFORM));\n\n    if (map[_constants.default.GENERIC_PLATFORM]) {\n      return map[_constants.default.GENERIC_PLATFORM];\n    }\n\n    return null;\n  }\n\n  _assertNoDuplicates(name, platform, supportsNativePlatform, relativePathSet) {\n    if (relativePathSet == null) {\n      return;\n    } // Force flow refinement\n\n\n    const previousSet = relativePathSet;\n    const duplicates = new Map();\n\n    for (const [relativePath, type] of previousSet) {\n      const duplicatePath = fastPath.resolve(this._raw.rootDir, relativePath);\n      duplicates.set(duplicatePath, type);\n    }\n\n    throw new DuplicateHasteCandidatesError(name, platform, supportsNativePlatform, duplicates);\n  }\n\n  static create(rootDir) {\n    return new ModuleMap({\n      duplicates: new Map(),\n      map: new Map(),\n      mocks: new Map(),\n      rootDir\n    });\n  }\n\n}\n\nexports.default = ModuleMap;\n\n_defineProperty(ModuleMap, 'DuplicateHasteCandidatesError', void 0);\n\nclass DuplicateHasteCandidatesError extends Error {\n  constructor(name, platform, supportsNativePlatform, duplicatesSet) {\n    const platformMessage = getPlatformMessage(platform);\n    super(`The name \\`${name}\\` was looked up in the Haste module map. It ` + `cannot be resolved, because there exists several different ` + `files, or packages, that provide a module for ` + `that particular name and platform. ${platformMessage} You must ` + `delete or exclude files until there remains only one of these:\\n\\n` + Array.from(duplicatesSet).map(([dupFilePath, dupFileType]) => `  * \\`${dupFilePath}\\` (${getTypeMessage(dupFileType)})\\n`).sort().join(''));\n\n    _defineProperty(this, 'hasteName', void 0);\n\n    _defineProperty(this, 'platform', void 0);\n\n    _defineProperty(this, 'supportsNativePlatform', void 0);\n\n    _defineProperty(this, 'duplicatesSet', void 0);\n\n    this.hasteName = name;\n    this.platform = platform;\n    this.supportsNativePlatform = supportsNativePlatform;\n    this.duplicatesSet = duplicatesSet;\n  }\n\n}\n\nfunction getPlatformMessage(platform) {\n  if (platform === _constants.default.GENERIC_PLATFORM) {\n    return 'The platform is generic (no extension).';\n  }\n\n  return `The platform extension is \\`${platform}\\`.`;\n}\n\nfunction getTypeMessage(type) {\n  switch (type) {\n    case _constants.default.MODULE:\n      return 'module';\n\n    case _constants.default.PACKAGE:\n      return 'package';\n  }\n\n  return 'unknown';\n}\n\nModuleMap.DuplicateHasteCandidatesError = DuplicateHasteCandidatesError;","map":{"version":3,"sources":["/home/epitech/Documents/e-commerce/client/node_modules/jest-haste-map/build/ModuleMap.js"],"names":["Object","defineProperty","exports","value","default","_constants","_interopRequireDefault","require","fastPath","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","enumerable","configurable","writable","EMPTY_OBJ","EMPTY_MAP","Map","ModuleMap","mapToArrayRecursive","map","arr","Array","from","el","mapFromArrayRecursive","isArray","constructor","raw","_raw","getModule","name","platform","supportsNativePlatform","type","MODULE","module","_getModuleMetadata","TYPE","modulePath","PATH","resolve","rootDir","getPackage","_supportsNativePlatform","PACKAGE","getMockModule","mockPath","mocks","getRawModuleMap","duplicates","toJSON","json","fromJSON","serializableModuleMap","dupMap","_assertNoDuplicates","NATIVE_PLATFORM","GENERIC_PLATFORM","relativePathSet","previousSet","relativePath","duplicatePath","DuplicateHasteCandidatesError","create","Error","duplicatesSet","platformMessage","getPlatformMessage","dupFilePath","dupFileType","getTypeMessage","sort","join","hasteName"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = _interopRequireDefault(require('./constants'));\n\nvar fastPath = _interopRequireWildcard(require('./lib/fast_path'));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nconst EMPTY_OBJ = {};\nconst EMPTY_MAP = new Map();\n\nclass ModuleMap {\n  static mapToArrayRecursive(map) {\n    let arr = Array.from(map);\n\n    if (arr[0] && arr[0][1] instanceof Map) {\n      arr = arr.map(el => [el[0], this.mapToArrayRecursive(el[1])]);\n    }\n\n    return arr;\n  }\n\n  static mapFromArrayRecursive(arr) {\n    if (arr[0] && Array.isArray(arr[1])) {\n      arr = arr.map(el => [el[0], this.mapFromArrayRecursive(el[1])]);\n    }\n\n    return new Map(arr);\n  }\n\n  constructor(raw) {\n    _defineProperty(this, '_raw', void 0);\n\n    _defineProperty(this, 'json', void 0);\n\n    this._raw = raw;\n  }\n\n  getModule(name, platform, supportsNativePlatform, type) {\n    if (type == null) {\n      type = _constants.default.MODULE;\n    }\n\n    const module = this._getModuleMetadata(\n      name,\n      platform,\n      !!supportsNativePlatform\n    );\n\n    if (module && module[_constants.default.TYPE] === type) {\n      const modulePath = module[_constants.default.PATH];\n      return modulePath && fastPath.resolve(this._raw.rootDir, modulePath);\n    }\n\n    return null;\n  }\n\n  getPackage(name, platform, _supportsNativePlatform) {\n    return this.getModule(name, platform, null, _constants.default.PACKAGE);\n  }\n\n  getMockModule(name) {\n    const mockPath =\n      this._raw.mocks.get(name) || this._raw.mocks.get(name + '/index');\n\n    return mockPath && fastPath.resolve(this._raw.rootDir, mockPath);\n  }\n\n  getRawModuleMap() {\n    return {\n      duplicates: this._raw.duplicates,\n      map: this._raw.map,\n      mocks: this._raw.mocks,\n      rootDir: this._raw.rootDir\n    };\n  }\n\n  toJSON() {\n    if (!this.json) {\n      this.json = {\n        duplicates: ModuleMap.mapToArrayRecursive(this._raw.duplicates),\n        map: Array.from(this._raw.map),\n        mocks: Array.from(this._raw.mocks),\n        rootDir: this._raw.rootDir\n      };\n    }\n\n    return this.json;\n  }\n\n  static fromJSON(serializableModuleMap) {\n    return new ModuleMap({\n      duplicates: ModuleMap.mapFromArrayRecursive(\n        serializableModuleMap.duplicates\n      ),\n      map: new Map(serializableModuleMap.map),\n      mocks: new Map(serializableModuleMap.mocks),\n      rootDir: serializableModuleMap.rootDir\n    });\n  }\n  /**\n   * When looking up a module's data, we walk through each eligible platform for\n   * the query. For each platform, we want to check if there are known\n   * duplicates for that name+platform pair. The duplication logic normally\n   * removes elements from the `map` object, but we want to check upfront to be\n   * extra sure. If metadata exists both in the `duplicates` object and the\n   * `map`, this would be a bug.\n   */\n\n  _getModuleMetadata(name, platform, supportsNativePlatform) {\n    const map = this._raw.map.get(name) || EMPTY_OBJ;\n    const dupMap = this._raw.duplicates.get(name) || EMPTY_MAP;\n\n    if (platform != null) {\n      this._assertNoDuplicates(\n        name,\n        platform,\n        supportsNativePlatform,\n        dupMap.get(platform)\n      );\n\n      if (map[platform] != null) {\n        return map[platform];\n      }\n    }\n\n    if (supportsNativePlatform) {\n      this._assertNoDuplicates(\n        name,\n        _constants.default.NATIVE_PLATFORM,\n        supportsNativePlatform,\n        dupMap.get(_constants.default.NATIVE_PLATFORM)\n      );\n\n      if (map[_constants.default.NATIVE_PLATFORM]) {\n        return map[_constants.default.NATIVE_PLATFORM];\n      }\n    }\n\n    this._assertNoDuplicates(\n      name,\n      _constants.default.GENERIC_PLATFORM,\n      supportsNativePlatform,\n      dupMap.get(_constants.default.GENERIC_PLATFORM)\n    );\n\n    if (map[_constants.default.GENERIC_PLATFORM]) {\n      return map[_constants.default.GENERIC_PLATFORM];\n    }\n\n    return null;\n  }\n\n  _assertNoDuplicates(name, platform, supportsNativePlatform, relativePathSet) {\n    if (relativePathSet == null) {\n      return;\n    } // Force flow refinement\n\n    const previousSet = relativePathSet;\n    const duplicates = new Map();\n\n    for (const [relativePath, type] of previousSet) {\n      const duplicatePath = fastPath.resolve(this._raw.rootDir, relativePath);\n      duplicates.set(duplicatePath, type);\n    }\n\n    throw new DuplicateHasteCandidatesError(\n      name,\n      platform,\n      supportsNativePlatform,\n      duplicates\n    );\n  }\n\n  static create(rootDir) {\n    return new ModuleMap({\n      duplicates: new Map(),\n      map: new Map(),\n      mocks: new Map(),\n      rootDir\n    });\n  }\n}\n\nexports.default = ModuleMap;\n\n_defineProperty(ModuleMap, 'DuplicateHasteCandidatesError', void 0);\n\nclass DuplicateHasteCandidatesError extends Error {\n  constructor(name, platform, supportsNativePlatform, duplicatesSet) {\n    const platformMessage = getPlatformMessage(platform);\n    super(\n      `The name \\`${name}\\` was looked up in the Haste module map. It ` +\n        `cannot be resolved, because there exists several different ` +\n        `files, or packages, that provide a module for ` +\n        `that particular name and platform. ${platformMessage} You must ` +\n        `delete or exclude files until there remains only one of these:\\n\\n` +\n        Array.from(duplicatesSet)\n          .map(\n            ([dupFilePath, dupFileType]) =>\n              `  * \\`${dupFilePath}\\` (${getTypeMessage(dupFileType)})\\n`\n          )\n          .sort()\n          .join('')\n    );\n\n    _defineProperty(this, 'hasteName', void 0);\n\n    _defineProperty(this, 'platform', void 0);\n\n    _defineProperty(this, 'supportsNativePlatform', void 0);\n\n    _defineProperty(this, 'duplicatesSet', void 0);\n\n    this.hasteName = name;\n    this.platform = platform;\n    this.supportsNativePlatform = supportsNativePlatform;\n    this.duplicatesSet = duplicatesSet;\n  }\n}\n\nfunction getPlatformMessage(platform) {\n  if (platform === _constants.default.GENERIC_PLATFORM) {\n    return 'The platform is generic (no extension).';\n  }\n\n  return `The platform extension is \\`${platform}\\`.`;\n}\n\nfunction getTypeMessage(type) {\n  switch (type) {\n    case _constants.default.MODULE:\n      return 'module';\n\n    case _constants.default.PACKAGE:\n      return 'package';\n  }\n\n  return 'unknown';\n}\n\nModuleMap.DuplicateHasteCandidatesError = DuplicateHasteCandidatesError;\n"]},"metadata":{},"sourceType":"script"}